version: '2.1'

services:
  postgres:
    image: postgres:9.6
    env_file:
      - ./docker/postgres.env
    volumes:
      - pg-data:/var/lib/postgresql/data
      - pg-backups:/pg_backups
    labels:
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes

  smtp:
    image: "catatnight/postfix"
    env_file:
      - ./docker/smtp.env

  tusd:
    image: tusproject/tusd:latest
    env_file:
      - ./docker/demo.env
    entrypoint: ["/go/bin/tusd", "-dir", "/srv/tusd-data", "-hooks-http", "http://app:${OZONE_GUNICORN_PORT}/api/uploads/"]
    volumes:
      - tusd-uploads:/srv/tusd-data
    labels:
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes

  app:
    image: eudeweb/ozone:latest
    ports:
      - "8000:8000"
    env_file:
      - ./docker/demo.env
      - ./docker/postgres.env
    volumes:
    - static-files:/var/local/ozone/static
    - tusd-uploads:/var/local/tusd_uploads
    - envelope-files:/var/local/protected_uploads
    depends_on:
      - postgres
      - tusd
    labels:
      io.rancher.container.pull_image: always
      io.rancher.scheduler.affinity:host_label_ne: reserved=yes

  weblate:
    build:
      context: .
      dockerfile: Dockerfile-weblate
    env_file:
      - ./docker/weblate.env
    volumes:
      - weblate-data:/app/data
    depends_on:
      - postgres-weblate
      - redis-weblate
      
  postgres-weblate:
    image: postgres:9.6
    env_file:
      - ./docker/weblate.env
    volumes:
      - pg-weblate-data:/var/lib/postgresql/data
      
  redis-weblate:
    image: redis:4-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data

volumes:
  pg-data:
    driver: rancher-nfs
  pg-backups:
    driver: rancher-nfs
  tusd-uploads:
    driver: rancher-nfs
  static-files:
    driver: rancher-nfs
  envelope-files:
    driver: rancher-nfs
  weblate-data:
    driver: rancher-nfs
  pg-weblate-data:
    driver: rancher-nfs
  redis-data:
    driver: rancher-nfs
