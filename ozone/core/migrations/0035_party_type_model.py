# Generated by Django 2.0.5 on 2018-12-11 10:45

from django.db import migrations, models
import django.db.models.deletion

party_type_data = [
  {
    "fields": {
      "abbr": "A5",
      "name": "Article 5"
    },
    "model": "core.partytype",
    "pk": 1
  },
  {
    "fields": {
      "abbr": "A5G1",
      "name": "Article 5 Group 1"
    },
    "model": "core.partytype",
    "pk": 2
  },
  {
    "fields": {
      "abbr": "A5G2",
      "name": "Article 5 Group 2"
    },
    "model": "core.partytype",
    "pk": 3
  },
  {
    "fields": {
      "abbr": "NA5",
      "name": "Non Article 5"
    },
    "model": "core.partytype",
    "pk": 4
  },
  {
    "fields": {
      "abbr": "NA5G1",
      "name": "Non Article 5 Group 1"
    },
    "model": "core.partytype",
    "pk": 5
  },
  {
    "fields": {
      "abbr": "NA5G2",
      "name": "Non Article 5 Group 2"
    },
    "model": "core.partytype",
    "pk": 6
  }
]


def populate_party_type(apps, schema_editor):
    PartyType = apps.get_model('core', 'PartyType')

    for entry in party_type_data:
        obj = PartyType(**entry['fields'])
        obj.pk = entry['pk']
        obj.save()


def migrate_party_history_party_type(apps, schema_editor):
    PartyHistory = apps.get_model('core', 'PartyHistory')
    PartyType = apps.get_model('core', 'PartyType')

    a5 = PartyType.objects.get(pk=1)
    a5g1 = PartyType.objects.get(pk=2)
    a5g2 = PartyType.objects.get(pk=3)
    na5 = PartyType.objects.get(pk=4)
    na5g1 = PartyType.objects.get(pk=5)
    na5g2 = PartyType.objects.get(pk=6)

    for ph in PartyHistory.objects.all():
        if ph.party_type_old == 'Article 5':
            ph.party_type = a5
        elif ph.party_type_old == 'Article 5 Group 1':
            ph.party_type = a5g1
        elif ph.party_type_old == 'Article 5 Group 2':
            ph.party_type = a5g2
        elif ph.party_type_old == 'Non Article 5':
            ph.party_type = na5
        elif ph.party_type_old == 'Non Article 5 Group 1':
            ph.party_type = na5g1
        elif ph.party_type_old == 'Non Article 5 Group 2':
            ph.party_type = na5g2
        else:
            ph.party_type = None


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0034_auto_20181211_0827'),
    ]

    operations = [
        migrations.CreateModel(
            name='PartyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbr', models.CharField(max_length=32, unique=True)),
                ('name', models.CharField(max_length=256, unique=True)),
            ],
        ),
        migrations.RunPython(populate_party_type, elidable=True),
        migrations.AddField(
            model_name='partyhistory',
            name='is_article5',
            field=models.BooleanField(default=True),
            preserve_default=False,
        ),
        migrations.RenameField(
            model_name='partyhistory',
            old_name='party_type',
            new_name='party_type_old',
        ),

        migrations.AddField(
            model_name='partyhistory',
            name='party_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='party_histories', to='core.PartyType'),
        ),
        migrations.RunPython(migrate_party_history_party_type, elidable=True),
        migrations.RemoveField(
            model_name='partyhistory',
            name='party_type_old',
        ),
        migrations.AlterField(
            model_name='partyhistory',
            name='reporting_period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='party_histories', to='core.ReportingPeriod'),
        ),
    ]
